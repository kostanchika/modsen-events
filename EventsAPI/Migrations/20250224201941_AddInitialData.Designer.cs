// <auto-generated />
using System;
using EventsAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EventsAPI.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20250224201941_AddInitialData")]
    partial class AddInitialData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EventUser", b =>
                {
                    b.Property<int>("EventsId")
                        .HasColumnType("integer");

                    b.Property<int>("ParticipantsId")
                        .HasColumnType("integer");

                    b.HasKey("EventsId", "ParticipantsId");

                    b.HasIndex("ParticipantsId");

                    b.ToTable("EventsParticipants", (string)null);
                });

            modelBuilder.Entity("EventsAPI.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Category")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTime>("EventDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("/images/default.png");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("MaximumParticipants")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Event");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = 1,
                            Description = "Вечер живой музыки с любимыми хитами и новыми песнями.",
                            EventDateTime = new DateTime(2025, 3, 15, 16, 0, 0, 0, DateTimeKind.Utc),
                            ImagePath = "/images/mumiy_troll.jpg",
                            Location = "Дворец Республики",
                            MaximumParticipants = 500,
                            Name = "Концерт группы \"Мумий Тролль\" в Минске"
                        },
                        new
                        {
                            Id = 2,
                            Category = 2,
                            Description = "Забег на 5, 10 и 21 километр для всех желающих.",
                            EventDateTime = new DateTime(2025, 4, 7, 6, 0, 0, 0, DateTimeKind.Utc),
                            ImagePath = "/images/marathon.jpg",
                            Location = "Центральный парк",
                            MaximumParticipants = 3000,
                            Name = "Спортивное мероприятие \"Минский марафон\""
                        },
                        new
                        {
                            Id = 3,
                            Category = 3,
                            Description = "Увлекательная лекция о художественных достижениях Возрождения.",
                            EventDateTime = new DateTime(2025, 3, 12, 15, 30, 0, 0, DateTimeKind.Utc),
                            ImagePath = "/images/renaissance_art.jpg",
                            Location = "Национальный музей",
                            MaximumParticipants = 100,
                            Name = "Лекция \"История искусства эпохи Возрождения\""
                        },
                        new
                        {
                            Id = 4,
                            Category = 4,
                            Description = "Экспертное мнение о правильном питании и здоровье.",
                            EventDateTime = new DateTime(2025, 3, 20, 14, 0, 0, 0, DateTimeKind.Utc),
                            ImagePath = "/images/healthy_food.jpg",
                            Location = "Конференц-зал гостиницы \"Минск\"",
                            MaximumParticipants = 200,
                            Name = "Семинар \"Здоровое питание: мифы и реальность\""
                        },
                        new
                        {
                            Id = 5,
                            Category = 5,
                            Description = "Экспозиция работ современных художников.",
                            EventDateTime = new DateTime(2025, 3, 25, 7, 0, 0, 0, DateTimeKind.Utc),
                            ImagePath = "/images/modern_art.jpg",
                            Location = "Галерея \"ArtBel\"",
                            MaximumParticipants = 150,
                            Name = "Выставка современного искусства"
                        },
                        new
                        {
                            Id = 6,
                            Category = 9,
                            Description = "Показ лучших фильмов от режиссёров Беларуси и мира.",
                            EventDateTime = new DateTime(2025, 3, 22, 13, 0, 0, 0, DateTimeKind.Utc),
                            ImagePath = "/images/film_festival.jpg",
                            Location = "Кинотеатр \"Октябрь\"",
                            MaximumParticipants = 300,
                            Name = "Кинофестиваль \"Минское кино\""
                        },
                        new
                        {
                            Id = 7,
                            Category = 1,
                            Description = "Музыкальный вечер в поддержку детей из детских домов.",
                            EventDateTime = new DateTime(2025, 3, 18, 16, 30, 0, 0, DateTimeKind.Utc),
                            ImagePath = "/images/charity_concert.jpg",
                            Location = "Дом культуры \"Минск\"",
                            MaximumParticipants = 400,
                            Name = "Благотворительный концерт \"Помоги детям\""
                        },
                        new
                        {
                            Id = 8,
                            Category = 3,
                            Description = "Практические занятия и тренинги по саморазвитию.",
                            EventDateTime = new DateTime(2025, 3, 30, 7, 0, 0, 0, DateTimeKind.Utc),
                            ImagePath = "/images/personal_growth.jpg",
                            Location = "Конференц-зал \"Минск\"",
                            MaximumParticipants = 150,
                            Name = "Семинар по личностному росту \"Стань лучшей версией себя\""
                        },
                        new
                        {
                            Id = 9,
                            Category = 10,
                            Description = "Классическая постановка шекспировской трагедии.",
                            EventDateTime = new DateTime(2025, 3, 27, 15, 0, 0, 0, DateTimeKind.Utc),
                            ImagePath = "/images/romeo_juliet.jpg",
                            Location = "Национальный театр",
                            MaximumParticipants = 500,
                            Name = "Театральное представление \"Ромео и Джульетта\""
                        },
                        new
                        {
                            Id = 10,
                            Category = 12,
                            Description = "Обсуждение последних инноваций и трендов в IT-индустрии.",
                            EventDateTime = new DateTime(2025, 4, 10, 6, 0, 0, 0, DateTimeKind.Utc),
                            ImagePath = "/images/tech_conference.jpg",
                            Location = "Конференц-центр \"Минск\"",
                            MaximumParticipants = 600,
                            Name = "Конференция \"Технологии будущего\""
                        },
                        new
                        {
                            Id = 11,
                            Category = 5,
                            Description = "Практические уроки по техникам живописи.",
                            EventDateTime = new DateTime(2025, 3, 21, 11, 0, 0, 0, DateTimeKind.Utc),
                            ImagePath = "/images/painting_workshop.jpg",
                            Location = "Арт-студия \"Минск\"",
                            MaximumParticipants = 50,
                            Name = "Мастер-класс по живописи"
                        },
                        new
                        {
                            Id = 12,
                            Category = 6,
                            Description = "Обучение приготовлению блюд национальной кухни.",
                            EventDateTime = new DateTime(2025, 4, 5, 8, 0, 0, 0, DateTimeKind.Utc),
                            ImagePath = "/images/cooking_workshop.jpg",
                            Location = "Кулинарная студия \"Минск\"",
                            MaximumParticipants = 30,
                            Name = "Кулинарный мастер-класс \"Готовим вместе\""
                        },
                        new
                        {
                            Id = 13,
                            Category = 3,
                            Description = "Увлекательное путешествие по историческим достопримечательностям города.",
                            EventDateTime = new DateTime(2025, 3, 28, 7, 0, 0, 0, DateTimeKind.Utc),
                            ImagePath = "/images/city_tour.jpg",
                            Location = "Центральная площадь",
                            MaximumParticipants = 40,
                            Name = "Экскурсия по историческим местам Минска"
                        },
                        new
                        {
                            Id = 14,
                            Category = 8,
                            Description = "Чтение стихов местных поэтов и любителей поэзии.",
                            EventDateTime = new DateTime(2025, 3, 26, 15, 0, 0, 0, DateTimeKind.Utc),
                            ImagePath = "/images/poetry_evening.jpg",
                            Location = "Литературный клуб \"Минск\"",
                            MaximumParticipants = 100,
                            Name = "Вечер поэзии"
                        },
                        new
                        {
                            Id = 15,
                            Category = 10,
                            Description = "Вечер юмора с участием популярных комиков.",
                            EventDateTime = new DateTime(2025, 4, 1, 17, 0, 0, 0, DateTimeKind.Utc),
                            ImagePath = "/images/standup_comedy.jpg",
                            Location = "Клуб \"Смех\"",
                            MaximumParticipants = 150,
                            Name = "Выступление стендап-комиков"
                        });
                });

            modelBuilder.Entity("EventsAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("RefreshTokenExpiresAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDateTime = new DateTime(2005, 3, 1, 1, 0, 0, 0, DateTimeKind.Utc),
                            Email = "admin@gmail.com",
                            LastName = "Главный",
                            Login = "admin",
                            Name = "Администратор",
                            PasswordHash = "$2a$11$fR8mRh4qNDDrAeao7y7RQezOoFsfG3h7nudLj/Gxqt.faTukK4bIu",
                            RefreshToken = "_",
                            RefreshTokenExpiresAt = new DateTime(2025, 2, 24, 20, 0, 0, 0, DateTimeKind.Utc),
                            Role = "Admin"
                        });
                });

            modelBuilder.Entity("EventUser", b =>
                {
                    b.HasOne("EventsAPI.Models.Event", null)
                        .WithMany()
                        .HasForeignKey("EventsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EventsAPI.Models.User", null)
                        .WithMany()
                        .HasForeignKey("ParticipantsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
